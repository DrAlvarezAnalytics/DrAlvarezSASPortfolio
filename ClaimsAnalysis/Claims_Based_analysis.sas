/***************************************************************************************************************
****************************************************************************************************************
*** Author: Carlos R. Alvarez 
*** Create Date: June 2025
*** Purpose: This SAS program creates a SAS dataset using a simulated claims dataset, 
			designed to support a claims-based medication adherence analysis project
 
*** Modified by:
*** Modify Date: 
*** Peer Review:
*** Peer Review Start Date:
*** OS: Windows 10 Pro 64-bit
*** Software: SAS 9.4
*** Program: Claims_Based_analysis.sas
*** Note: The input dataset for this analysis was generated using commercially-available generative AI models (Chatgpt 4o)
**************************************************************************************************************/

/*Define Library*/
libname claims '/home/cralvarezhdz0/RWE Portfolio';

/*import CSV file generated by AI*/
proc import datafile='/home/cralvarezhdz0/RWE Portfolio/claims_adherence_mock_dataset.csv'
			out=claims.claimdata
			DBMS=csv replace;
			GETNAMES=yes;
run;

/*View dataset structure and count the number of unique patients in dataset*/

ods pdf file='/home/cralvarezhdz0/RWE Portfolio/Adherence_Analysis_Output.pdf' style=statistical;

Title'Number of Unique Patients in dataset';
proc sql;
	describe table claims.claimdata;
	
	select count(distinct patient_id)
	from claims.claimdata;
quit;

/*Sort data patient fill date*/

proc sort data=claims.claimdata out=claimds;
	by patient_id fill_date;
run;

/*Calculate the Coverage Period, PDC and MPR*/
data claimds1;
	set claimds;
	by patient_id;
	
	retain start_date end_date total_days total_supply;
	
	format start_date end_date date9.;
	
	if first.patient_id then do;
		start_date=fill_date;
		end_date=fill_date + days_supply - 1;
		total_days=0;
		total_supply=0;
	end;

	else do; 
	   if fill_date <= end_date then do;
            overlap = end_date - fill_date + 1;
            covered_days = days_supply - overlap;
            if covered_days < 0 then covered_days = 0;
        end;
        else covered_days = days_supply; 
        
        end_date = max(end_date, fill_date + days_supply - 1);
        total_days + covered_days;
        total_supply + days_supply;
    end;
	 
	 if last.patient_id then do;
        obs_period = end_date - start_date + 1;
        MPR = round(total_supply / obs_period,0.1);
        PDC = round(total_days / obs_period, 0.1);
        output;
    end;
    
    keep patient_id age sex race_ethnicity medication payer_type start_date end_date total_days total_supply obs_period 
    	mpr pdc pdc_cpt adherence_cpt;
run;

/*Create age group*/
data claimds1;
		set claimds1;
      	Length agegroup $20;
      	
      if age < 30 then agegroup = "0-30";
  	  else if 30 <= age < 45 then agegroup = "30-44";
  	  else if 45 <= age < 60 then agegroup = "45-59";
  	  else agegroup = "60+";
  	  
  	  *Create an Adherence variable (PDC >=0.8);
  	  	if PDC >= 0.8 then Adherence = 1;
  	  	else Adherence = 0;  	  
run;


/*Descriptive statistics for PDC and MPR*/
title 'Descriptive Statistics for PDC and MPR';
proc means data=claimds1 mean median std min max maxdec=2;
	var mpr pdc;
run;

/*Descriptive statistics by Age, Gender, Payer Type */
title "Descriptive Statistics for PDC and MPR by Age, Sex, Payer Type";
proc means data=claimds1 mean median std min max maxdec=2;
  class agegroup sex race_ethnicity payer_type;
  var pdc mpr;
run;

/*Histograms for PDC and MPR */
title "Histogram of Proportion of Days Covered (PDC)";
proc sgplot data=claimds1;
  histogram pdc / binwidth=0.05;
  
run;

title "Histogram of Medication Possession Ratio (MPR)";
proc sgplot data=claimds1;
  histogram mpr / binwidth=0.05;
run;

/*Adherence rates by subgroup*/
proc freq data=claimds1;
  tables adherence * (agegroup sex race_ethnicity payer_type) / norow;
  title "Adherence Rates by Age Group, Gender, and Payer Type";
run;

/*Bar Chart for Adherence Rates*/
title "Bar Chart of Adherence Rate by Age Group";
proc sgplot data=claimds1;
  vbar agegroup / response=adherence stat=mean datalabel;
  yaxis label="Proportion Adherent (PDC ≥ 0.8)";
run;

title "Bar Chart of Adherence Rate by Race/Ethnicity";
proc sgplot data=claimds1;
  vbar race_ethnicity / response=adherence stat=mean datalabel;
  yaxis label="Proportion Adherent (PDC ≥ 0.8)";
run;

title "Bar Chart of Adherence Rate by Sex";
proc sgplot data=claimds1;
  vbar sex / response=adherence stat=mean datalabel;
  yaxis label="Proportion Adherent (PDC ≥ 0.8)";
run;

title "Bar Chart of Adherence Rate by Payer Type";
proc sgplot data=claimds1;
  vbar payer_type/ response=adherence stat=mean datalabel;
  yaxis label="Proportion Adherent (PDC ≥ 0.8)";
run;


/*Logistic Regression Predicting Non-Adherence */
proc logistic data=claimds1 descending;
  class sex(ref="F") agegroup(ref="0-30") payer_type(ref="Commercial") race_ethnicity(ref='White') / param=ref;
  model adherence(event='1') = sex agegroup payer_type;
  title "Logistic Regression for Predictors of Adherence (PDC ≥ 0.8)";
run;

ods pdf close;

/*Exporting Results in excel file*/
proc export data=claimds1
  outfile="/home/cralvarezhdz0/RWE Portfolio/claims_analysis_dataset.xls"
  dbms=xls replace;
run;





